name: release

on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+

permissions:
  contents: write

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - rust_target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: binary-bin-linux-amd64-gnu
          # - rust_target: x86_64-unknown-linux-musl
          #   os: ubuntu-latest
          #   artifact_name: binary-bin-linux-amd64-musl

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.rust_target }}

      - name: Install mingw for Windows cross-compilation
        if: matrix.rust_target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build the binary
        run: |
          cargo build --verbose --release --target ${{ matrix.rust_target }}
          if [[ "${{ matrix.artifact_name }}" == *.exe ]]; then
            mv target/${{ matrix.rust_target }}/release/swb.exe ${{ matrix.artifact_name }}
          else
            mv target/${{ matrix.rust_target }}/release/swb.d ${{ matrix.artifact_name }}
          fi

          ls -la target/
          ls -la target/${{ matrix.rust_target }}/release

      - name: Build archive
        shell: bash
        run: |
          binary_name="swb"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.rust_target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.rust_target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.rust_target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: determine tag type
        id: tag_type
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
            echo "tag_type=PRE_RELEASE_TAG" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "tag_type=RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "tag_type=INVALID_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ steps.tag_type.outputs.tag_type == 'PRE_RELEASE_TAG' }}
          files: |
            ${{ env.ASSET }}
